#1-풀이
def solution(a,b):
    list=[]
    for i in range(1,a+1):
        if a%i == 0:
            list.append(i)
    if b<=len(list):
        print(list[b-1])
    else:
        print(-1)
#1 강의
import sys
sys.stdin = open("input.txt","rt")
n, k = map(int, input().split())
cnt=0

for i in range(1,n+1):
	if n%i==0:
		cnt+=1
	if cnt ==k:
		print(i)
		break
else:
	print(-1)
#2
import sys
sys.stdin = open("input.txt","r")
T=int(input()) 
for t in range(T): #각 케이스별로 읽어들임
	n,s,e,k = map(int, input().split())
	a=list(map(int,input().split()))
	a=a[s-1:e] #슬라이싱(s-1번 째 인덱스부터 e-1인덱스까지)
	a.sort()
	print("#%d %d" %(t+1,a[k-1]))

#3- 강의
import sys
sys.stdin = open("input.txt","rt")
n, k = map(int, input().split())
a=list(map(int, input().split()))

res = set()
for i in range(n):
	for j in range(i+1,n): #중복 방지
		for m in range(j+1,n):
			res.add(a[i]+a[j]+a[m])
#set() 자료구조는 sort가 없음
res = list(res)
res.sort(reverse=True) #내림차순
print(res[k-1])

#4 - 풀이
import math
list=[45,73,66,87,92,67,75,79,75,80]
def solution(list):
    val=0
    li=[]
    for i in list:
        val +=i
    avg = round(val/10)
    for i in list:
        #평균과의 차이로 접근?
        li.append(avg-i)
    #부호 없애서 -> 
    li=sorted(li,key=abs)
    print(li)

solution(list)

#4-강의
import sys
sys.stdin = open("input.txt","r")
n=int(input())
a=list(map(int, input().split()))

ave=round(sum(a)/n) #a에 있는 값들을 모두 합해준다.
min = 2147000000 #정수형 가장 큰 값
for idx,x in enumerate(a): #인덱스값과 값을 쌍으로 대응해준다
	tmp = abs(x-ave)
	if tmp<min:
		min = tmp
		score=x
		res=idx+1 #0번 부터 시작
	elif tmp==min:
		if x >score: #현재 학생> 그 전의 학생의 점수
			score=x
			res=idx +1
print(ave,res)

#5 - 풀이
def solution(a,b):
    list=[]
    li2=[]
    score=0
    for i in range(1,a+1):
        for j in range(1,b+1):
            list.append(i+j) #빈도수가 높으면 확률도 높음
    list=sorted(list) #정렬
    #count 함수 이용
    for i in list:
        if score!=i:
            li2.append(list.count(i))
        else:
            continue
        score=i
    #최대값 찾아서 
 
    
solution(4,6)

#5-강의
import sys
sys.stdin = open("input.txt","r")
n,m=map(int, input().split())
max=0 #가장 작은 값으로 초기화 -2147------
cnt=[0]*(n+m+3)
for i in range(1,n+1):
	for j in range(1,m+1):
		cnt[i+j]+=1
for i in range(n+m+1):
	if cnt[i]>max:
		max=cnt[i]
for i in range(n+m+1):
	if cnt[i]==max:
		print(i,end=' ') #옆으로 출력됨

#6 -풀이
def digit_sum(x):
    cnt=num=0
    while x>10:
        num= int(x%10)
        cnt=cnt+num
        x=int(x/10)
        if x<10:
            cnt+=x
            break
        else:
            continue
    return(cnt)
list =[125,15232,97]
score=max=idx=0

for i in list:
    score = digit_sum(i)
    if score>max:
        max = score
        idx=i
print(idx)

#6-강의
import sys
sys.stdin=open("input.txt","r")
n=int(input())
a=list(map(int,input().split()))

def digit_sum(x):
	sum=0
	while x>0:
		sum+=x%10
		x=x//10 #//라고 하면 float걱정 안해도 됨 -> 바로 몫 구함
	return sum

max=-2147000000
for x in a:
	tot=digit_sum(x)
	if tot>max:
		max = tot
		res = x
print(res)

#7 -풀이
def solution(x):
    list=[]
    for i in range(2,x+1):
        #소수 구하기
        for j in range(2,i):
            if i%j==0 :
                break
        else:
            list.append(i)
    print(len(list))

#7- 강의
import sys
sys.stdin = open("input.txt","r")
n=int(input())

ch=[0]*(n+1)
cnt=0
for i in range(2,n+1):
	if ch[i]==0:
		cnt+=1
		for j in range(i,n+1,i): #i의 배수로 증가
			ch[j]=1
print(cnt)

#8 -풀이
def reverse(x):
    li=[]
    result=0
    while x>10:
        li.append(x%10)
        x=int(x/10)
        if x<10:
            li.append(x)
            break
    if li[0]==0:
        li.remove(li[0])
        for i in li:
            if i==0:
                li.remove(li[0])
            else:
                break
    for i in range(len(li)):
        result+=li[i]*(10**(len(li)-1-i)) #거듭제곱
    return result

def isPrime(x):
    num = reverse(x)
    for i in range(2,num):
        if num%i==0:
            return 0
    else:
        return 1

list = [32, 55, 62, 3700, 250]
for i in list:
    if isPrime(i)==1:
        print(reverse(i))

#8- 강의
import sys
sys.stdin=open("input.txt","r")
n=int(input())
a=list(map(int, input().split()))
def reverse(x):
	res=0
	while x>0:
		t=x%10
		res=res*10+t # 뒤집으면서 동시에 
		x=x//10
	return res

def isPrime(x):
	if x==1:
		return False
	for i in range(2,x//2+1): #소수는 절반까지만 돈다 - 약수가 절반
		if x%i==0:
			return False
	else:
		return True

for x in a:
	tmp=reverse(x)
	if isPrime(tmp):
		print(tmp,end=" ")


#9 -풀이
list=[3,3,6]
def solution(list):
    cnt=0
    list.sort() #list.sort()는 리스트를 변환 시킨 후 아무것도 반환하지 ㅇ낳는다. 
    final=0
    if list[0]==list[1]: #TypeError = NoneType object is not subscriptable
        cnt+=1
        if list[1]==list[2]:
             cnt+=1
             
    elif list[1] == list[2]:
        cnt+=1
    final=solution2(cnt,list[2])
    print(final)

def solution2(x,y):
    result=0
    if x==2:
        result = 10000+y*1000
    elif x==1:
        result = 1000+y*100
    else:
        result = y*100
    return result 


solution(list)


#9 -강의
import sys
sys.stdin = open("input.txt","r")
n=int(input())

res=0
for i in range(n):
	tmp=input().split() #문자화된 숫자
	tmp.sort() #질문
	a,b,c= map(int,tmp)
	if a==b and b==c: #if,elif 순서 
		money = 10000+a*1000
	elif a==b or a==c:
		money = 1000+(a*100)
	elif b==c:
		money = 1000+(b*c)
	else:
		money=c*100
	if money>res:
		res=money

print(res)


#10 -풀이
list=[1,0,1,1,1,0,0,1,1,0]
cnt=0
score=[]
for i in range(len(list)):
    if list[i]==1:
        if list[i-1]:
            cnt+=1
            score.append(cnt)
        else:
            cnt=1
            score.append(cnt)
    else:
        continue
print(sum(score))


#10 -강의
import sys
sys.stdin=open("input.txt","r")
n=int(input())
a=list(map(int,input().split()))

sum=0
cnt=0

for x in a:
	if x ==1:
		cnt+=1
		sum+=cnt
	else:
		cnt=0
print(sum)